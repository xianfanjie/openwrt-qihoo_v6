name: OpenWrt-IPQ60XX-360V6-Main

on:
  workflow_dispatch:
    inputs:
      load_files:
        description: 'load files'
        required: true
        type: boolean
        default: false
      set_password:
        description: 'set password'
        required: true
        type: boolean
        default: false
#  schedule:
#    - cron: 0 19 * * *

env:
  REPO_URL: https://github.com/openwrt/openwrt.git
  REPO_BRANCH: main
  ENCODE_FILES: ${{ secrets.ENCODE_FILES }}
  PASSWORD: ${{ secrets.PASSWORD }}
  FEEDS_CONF: ./feeds/feeds.conf.default
  CONFIG_FILE: ./config/openwrt_360v6.config
  DIY_P1_SH: ./scripts/diy-part1.sh
  DIY_P2_SH: ./scripts/openwrt-diy-part2.sh
  CLASH_KERNEL: amd64
  CACHE_TOOLCHAIN: true
  UPLOAD_BIN_DIR: true
  FIRMWARE_RELEASE: true
  FIRMWARE_TAG: IPQ60XX-Main
  DEVICE_NAME: qihoo_360V6
  KERNEL_VERSION: 6.12.32
  TZ: Asia/Shanghai

jobs:
  Build:
    runs-on: ubuntu-22.04

    steps:
    - name: Check Server Performance(检查服务器性能)
      run: |
        echo "警告⚠"
        echo "分配的服务器性能有限，若选择的插件过多，务必注意CPU性能！"
        echo -e "已知CPU型号（降序）：7763，8370C，8272CL，8171M，E5-2673 \n"
        echo "--------------------------CPU信息--------------------------"
        echo "CPU物理数量：$(cat /proc/cpuinfo | grep "physical id" | sort | uniq | wc -l)"
        echo -e "CPU核心信息：$(cat /proc/cpuinfo | grep name | cut -f2 -d: | uniq -c) \n"
        echo "--------------------------内存信息--------------------------"
        echo "已安装内存详细信息："
        echo -e "$(sudo lshw -short -C memory | grep GiB) \n"
        echo "--------------------------硬盘信息--------------------------"
        echo "硬盘数量：$(ls /dev/sd* | grep -v [1-9] | wc -l)" && df -hT

    - name: Initialization Environment(初始化环境)
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        docker rmi $(docker images -q)
        sudo rm -rf /usr/share/dotnet /etc/apt/sources.list.d /usr/local/lib/android $AGENT_TOOLSDIRECTORY
        sudo -E apt-get -y purge azure-cli ghc* zulu* llvm* firefox google* dotnet* powershell openjdk* mongodb* moby* || true
        sudo -E apt-get -y update
        sudo -E apt-get -y install ack antlr3 aria2 asciidoc autoconf automake autopoint binutils bison btrfs-progs build-essential bzip2 ca-certificates ccache cmake coreutils cpio curl device-tree-compiler fastjar flex g++-multilib gawk gcc-multilib gettext git git-core gperf gzip haveged help2man intltool jq libc6-dev-i386 libelf-dev libfuse-dev libglib2.0-dev libgmp3-dev libltdl-dev libmpc-dev libmpfr-dev libncurses5-dev libncursesw5-dev libpython3-dev libreadline-dev libssl-dev libtool libz-dev lrzsz mkisofs msmtp nano ninja-build p7zip p7zip-full patch pigz pkgconf python2.7 python3 python3-pip python3-pyelftools python3-setuptools qemu-utils rsync scons squashfs-tools swig tar texinfo uglifyjs unzip upx upx-ucl vim wget xmlto xsltproc xxd xz-utils yasm zip zlib1g-dev zstd rename
        sudo -E systemctl daemon-reload
        sudo -E apt-get -y autoremove --purge
        sudo -E apt-get -y clean
        sudo timedatectl set-timezone "$TZ"

    - name: Combine Disks(合并磁盘)
      uses: easimon/maximize-build-space@master
      with:
        swap-size-mb: 1024
        temp-reserve-mb: 100
        root-reserve-mb: 1024

    - name: Checkout
      uses: actions/checkout@main

    - name: Clone Source Code(克隆源代码)
      run: |
        df -hT $GITHUB_WORKSPACE
        git clone --depth 1 -b $REPO_BRANCH $REPO_URL openwrt
        cd openwrt
        echo "OPENWRT_PATH=$PWD" >> $GITHUB_ENV
        VERSION_INFO=$(git show -s --date=short --format="作者: %an<br/>时间: %cd<br/>内容: %s<br/>hash: %H")
        echo "VERSION_INFO=$VERSION_INFO" >> $GITHUB_ENV

    - name: Decode files and Move files
      if: ${{ github.event.inputs.load_files == 'true' && env.ENCODE_FILES != '' }}
      run: |
        echo "$ENCODE_FILES" | base64 --decode > files.tar.gz
        tar -xzf files.tar.gz
        mv -f files $OPENWRT_PATH
    
    - name: Enable WIFI and Set  Password
      if: ${{ github.event.inputs.set_password == 'true' && env.PASSWORD != '' }}
      run: |
        cd $OPENWRT_PATH
        
        sed -i "s/country='.*'$/country='US'/" package/network/config/wifi-scripts/files/lib/wifi/mac80211.uc
        sed -i "s/disabled='.*'$/disabled='0'/" package/network/config/wifi-scripts/files/lib/wifi/mac80211.uc
        sed -i "s/encryption='.*'$/encryption='psk2'/" package/network/config/wifi-scripts/files/lib/wifi/mac80211.uc
        sed -i "s/key='.*'$/key='${PASSWORD}'/" package/network/config/wifi-scripts/files/lib/wifi/mac80211.uc
        
        salt=$(openssl rand -base64 16)
        last_changed_date=$(( $(date +%s) / 86400 ))
        root_password_hash=$(openssl passwd -5 -salt $salt $PASSWORD)
        sed -i "s|^root:[^:]*:|root:$root_password_hash:$last_changed_date|g" package/base-files/files/etc/shadow

    - name: Generate Variables(生成变量)
      run: |
        SOURCE_REPO="$(echo $REPO_URL | awk -F '/' '{print $(NF)}')"
        echo "SOURCE_REPO=$SOURCE_REPO" >> $GITHUB_ENV

    - name: Cache Toolchain(缓存工具链)
      if: env.CACHE_TOOLCHAIN == 'true'
      uses: HiGarfield/cachewrtbuild@main
      with:
        ccache: false
        mixkey: ${{ env.SOURCE_REPO }}-${{ env.REPO_BRANCH }}-${{ env.DEVICE_NAME }}
        prefix: ${{ env.OPENWRT_PATH }}

    - name: Load Feeds for Extra Packages
      run: |
        [ -e $FEEDS_CONF ] && mv $FEEDS_CONF $OPENWRT_PATH/feeds.conf.default
        chmod +x $DIY_P1_SH
        cd $OPENWRT_PATH
        $GITHUB_WORKSPACE/$DIY_P1_SH

    - name: Install Feeds(安装feeds)
      run: |
        cd $OPENWRT_PATH
        ./scripts/feeds update -a
        ./scripts/feeds install -a

    - name: Load Custom Configuration(加载自定义配置)
      run: |
        [ -e files ] && mv files $OPENWRT_PATH/files
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE $OPENWRT_PATH/.config
        chmod +x $DIY_P2_SH
        cd $OPENWRT_PATH
        $GITHUB_WORKSPACE/$DIY_P2_SH

    - name: Download DL Package(下载DL软件包)
      run: |
        cd $OPENWRT_PATH
        make defconfig
        make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: Compile Firmware(开始编译固件)
      id: compile
      run: |
        cd $OPENWRT_PATH
        echo -e "$(nproc) thread compile"
        make -j$(nproc) || make -j1 || make -j1 V=s
        echo "status=success" >> $GITHUB_OUTPUT
        echo "DATE=$(date +"%Y-%m-%d %H:%M:%S")" >> $GITHUB_ENV
        echo "FILE_DATE=$(date +"%Y-%m-%d %H-%M-%S")" >> $GITHUB_ENV
        rename -v "s/openwrt-/$(date +"%Y-%m-%d-%H-%M")-openwrt-/" bin/targets/*/*/* || true

    - name: Check Space Usage(检查空间使用情况)
      if: (!cancelled())
      run: df -hT

    - name: Upload Bin Directory(上传固件)
      if: steps.compile.outputs.status == 'success' && env.UPLOAD_BIN_DIR == 'true'
      uses: actions/upload-artifact@main
      with:
        name: ${{ env.FILE_DATE }}-OpenWrt-bin-${{ env.DEVICE_NAME }}
        path: ${{ env.OPENWRT_PATH }}/bin

    - name: Organize Files(整理文件)
      if: steps.compile.outputs.status == 'success'
      run: |
        cd $OPENWRT_PATH/bin/targets/*/*
        cat sha256sums
        cp $OPENWRT_PATH/.config build.config
        [ -d "$OPENWRT_PATH/bin/packages" ] && cp -r "$OPENWRT_PATH/bin/packages" packages
        tar -zcf Packages.tar.gz packages
        rm -rf packages
        echo "FIRMWARE_PATH=$PWD" >> $GITHUB_ENV

    - name: Upload Firmware To Artifact(将固件上传到Artifact)
      if: steps.compile.outputs.status == 'success' && env.FIRMWARE_RELEASE != 'true'
      uses: actions/upload-artifact@main
      with:
        name: ${{ env.FILE_DATE }}-OpenWrt-firmware-${{ env.DEVICE_NAME }}
        path: ${{ env.FIRMWARE_PATH }}

    - name: Generate Release Tag (生成标签)
      run: |
        RELEASE_TAG="R$(date +"%y%m%dT%H%M%S")-$FIRMWARE_TAG"
        echo "RELEASE_TAG=$RELEASE_TAG" >> $GITHUB_ENV

    - name: Upload Firmware To Release(发布固件)
      if: steps.compile.outputs.status == 'success' && env.FIRMWARE_RELEASE == 'true'
      uses: ncipollo/release-action@v1
      with:
        name: R${{ env.DATE }} for ${{ env.FIRMWARE_TAG }}
        allowUpdates: false
        tag: ${{ env.RELEASE_TAG }}
        token: ${{ secrets.GITHUB_TOKEN }}
        artifacts: ${{ env.FIRMWARE_PATH }}/*
        body: |
          **This is OpenWrt Firmware for ${{ env.FIRMWARE_TAG }}**
          ### 📒 这是由OpenWrt官方主线源码构建的固件
          - 这是带WIFI的 ${{ env.KERNEL_VERSION }} 内核固件
          - 💻 这是 ${{ env.FIRMWARE_TAG }} 平台 ${{ env.DEVICE_NAME }}使用的 OpenWrt 固件
          - ⚽ 固件源码: ${{ env.REPO_URL }}
          - 💝 源码分支: ${{ env.REPO_BRANCH }}
          - 🌐 默认地址: 192.168.0.1
          - 🔑 默认密码:
          ### 🧊 固件版本
          - 固件编译前最后一次➦[主源码](${{ env.REPO_URL }})更新记录
          - ${{ env.VERSION_INFO }}
          
    - name: Delete Old Workflows
      uses: Mattraks/delete-workflow-runs@main
      with:
        retain_days: 0
        keep_minimum_runs: 5

    - name: Delete Old Releases
      uses: dev-drprasad/delete-older-releases@master
      with:
        keep_latest: 15
        delete_tags: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
